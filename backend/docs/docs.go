// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/rating-cards": {
            "get": {
                "description": "Retrieves all rating cards from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rating-card"
                ],
                "summary": "Get all rating cards",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.RatingCard"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ratings/candidate": {
            "get": {
                "description": "Fetches rating cards and enriches them with existing ratings for a given user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rating-candidate"
                ],
                "summary": "Get candidate ratings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Email",
                        "name": "userEmail",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CandidateRatingDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Stores or updates candidate ratings in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rating-candidate"
                ],
                "summary": "Save candidate ratings",
                "parameters": [
                    {
                        "description": "List of candidate ratings",
                        "name": "ratings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CandidateRatingDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "message: Ratings saved successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to save ratings",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ratings/employer": {
            "get": {
                "description": "Fetches rating cards and enriches them with existing ratings for a given user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rating-employer"
                ],
                "summary": "Get candidate ratings for employer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Email",
                        "name": "userEmail",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.EmployerRatingDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Stores or updates candidate ratings of employer in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rating-employer"
                ],
                "summary": "Save employer ratings",
                "parameters": [
                    {
                        "description": "List of candidate ratings",
                        "name": "ratings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.EmployerRatingDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "message: Ratings saved successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to save ratings",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ratings/employer/candidates": {
            "get": {
                "description": "Fetches rating candidates",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rating-employer"
                ],
                "summary": "Get rating candidates",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CandidateRatingDTO": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "orderId": {
                    "type": "integer"
                },
                "question": {
                    "type": "string"
                },
                "ratingCandidate": {
                    "type": "integer"
                },
                "ratingCardId": {
                    "type": "integer"
                },
                "textResponseCandidate": {
                    "type": "string"
                },
                "timeStampCandidate": {
                    "type": "string"
                },
                "userEmail": {
                    "type": "string"
                }
            }
        },
        "models.EmployerRatingDTO": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "orderId": {
                    "type": "integer"
                },
                "question": {
                    "type": "string"
                },
                "ratingCandidate": {
                    "type": "integer"
                },
                "ratingCardId": {
                    "type": "integer"
                },
                "ratingEmployer": {
                    "type": "integer"
                },
                "textResponseCandidate": {
                    "type": "string"
                },
                "textResponseEmployer": {
                    "type": "string"
                },
                "timeStampCandidate": {
                    "type": "string"
                },
                "timeStampEmployer": {
                    "type": "string"
                },
                "userEmail": {
                    "type": "string"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "models.RatingCard": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "orderId": {
                    "type": "integer"
                },
                "question": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Fox & Hound API",
	Description:      "This is a Gin-based API for the Fox & Hound application.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
